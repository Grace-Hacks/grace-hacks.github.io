{"version":3,"sources":["assets/logo.svg","components/NavigationBar/NavigationBar.js","components/About/About.js","components/FAQ/FAQ.js","components/Team/Team.js","components/Sponsors/Sponsors.js","components/Contacts/Contacts.js","components/Footer/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationBar","Navbar","sticky","bg","expand","onClick","animateScroll","scrollToTop","Toggle","aria-controls","Collapse","id","Nav","class","activeClass","to","spy","smooth","offset","duration","style","marginRight","fontWeight","About","FAQ","Team","Sponsors","Contacts","Footer","App","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,kC,8LCsB5BC,MAlBf,WACE,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MAAMC,GAAG,QAAQC,OAAO,MACrC,uBAAGC,QAAS,kBAAMC,gBAAcC,gBAAhC,cACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,MAAM,WACT,kBAAC,OAAD,CAAMC,YAAY,SAASC,GAAG,gBAAgBC,KAAM,EAAOC,QAAS,EAAOC,QAAU,GAAKC,SAAY,IAAMC,MAAO,CAAEC,YAAa,MAAOC,WAAY,SAArJ,SACA,kBAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,cAAcC,KAAM,EAAOC,QAAS,EAAOC,QAAU,GAAKC,SAAY,IAAMC,MAAO,CAAEC,YAAa,MAAOC,WAAY,SAAnJ,OACA,kBAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,eAAeC,KAAM,EAAOC,QAAS,EAAOC,QAAU,GAAKC,SAAY,IAAMC,MAAO,CAAEC,YAAa,MAAOC,WAAY,SAApJ,QACA,kBAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,mBAAmBC,KAAM,EAAOC,QAAS,EAAOC,QAAU,GAAKC,SAAY,IAAMC,MAAO,CAAEC,YAAa,MAAOC,WAAY,SAAxJ,YACA,kBAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,mBAAmBC,KAAM,EAAOC,QAAS,EAAOC,QAAU,GAAKC,SAAY,IAAMC,MAAO,CAAEE,WAAY,SAApI,gBCPKC,MANf,WACE,OACG,yBAAKZ,GAAG,iBAAR,qBCIUa,MANf,WACE,OACG,yBAAKb,GAAG,eAAR,mBCIUc,MANf,WACE,OACG,yBAAKd,GAAG,gBAAR,oBCIUe,MANf,WACE,OACG,yBAAKf,GAAG,oBAAR,wBCIUgB,MANf,WACE,OACG,yBAAKhB,GAAG,oBAAR,wBCIUiB,MANf,WACE,OACG,mD,uBCiCUC,MAvBf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,gDAGA,uBAAGH,UAAU,WAAWI,KAAK,sBAAsBC,OAAO,SAASC,IAAI,uBAAvE,gBAIF,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCpBcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ea091ce3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, animateScroll } from 'react-scroll';\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\r\n      <a onClick={() => animateScroll.scrollToTop() }>GraceHacks</a>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav class=\"ml-auto\">\r\n          <Link activeClass=\"active\" to=\"about-section\" spy={ true } smooth={ true } offset={ -70 } duration= { 500 } style={{ marginRight: '2em', fontWeight: 'bold' }}>About</Link>\r\n          <Link activeClass=\"active\" to=\"faq-section\" spy={ true } smooth={ true } offset={ -70 } duration= { 500 } style={{ marginRight: '2em', fontWeight: 'bold' }}>FAQ</Link>\r\n          <Link activeClass=\"active\" to=\"team-section\" spy={ true } smooth={ true } offset={ -70 } duration= { 500 } style={{ marginRight: '2em', fontWeight: 'bold' }}>Team</Link>\r\n          <Link activeClass=\"active\" to=\"sponsors-section\" spy={ true } smooth={ true } offset={ -70 } duration= { 500 } style={{ marginRight: '2em', fontWeight: 'bold' }}>Sponsors</Link>\r\n          <Link activeClass=\"active\" to=\"contacts-section\" spy={ true } smooth={ true } offset={ -70 } duration= { 500 } style={{ fontWeight: 'bold' }}>Contacts</Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n     <div id=\"about-section\">\"About\" Section!</div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nfunction FAQ() {\r\n  return (\r\n     <div id=\"faq-section\">\"FAQ\" Section!</div>\r\n  );\r\n}\r\n\r\nexport default FAQ;","import React from 'react';\r\n\r\nfunction Team() {\r\n  return (\r\n     <div id=\"team-section\">\"Team\" Section!</div>\r\n  );\r\n}\r\n\r\nexport default Team;","import React from 'react';\r\n\r\nfunction Sponsors() {\r\n  return (\r\n     <div id=\"sponsors-section\">\"Sponsors\" Section!</div>\r\n  );\r\n}\r\n\r\nexport default Sponsors;","import React from 'react';\r\n\r\nfunction Contacts() {\r\n  return (\r\n     <div id=\"contacts-section\">\"Contacts\" Section!</div>\r\n  );\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n     <div>\"Footer\" Section!</div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport NavigationBar from './NavigationBar/NavigationBar';\r\nimport About from './About/About';\r\nimport FAQ from './FAQ/FAQ';\r\nimport Team from './Team/Team';\r\nimport Sponsors from './Sponsors/Sponsors';\r\nimport Contacts from './Contacts/Contacts';\r\nimport Footer from './Footer/Footer';\r\n\r\nimport logo from '../assets/logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavigationBar />\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Everything works!\r\n        </p>\r\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Learn React\r\n        </a>\r\n      </header>\r\n      <About />\r\n      <FAQ />\r\n      <Team />\r\n      <Sponsors />\r\n      <Contacts />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}